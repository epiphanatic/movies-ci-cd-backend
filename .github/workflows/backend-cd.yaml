name: Backend Continuous Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  PYTHON_VERSION: '3.10'

jobs:
  # note lint and test are run in parallel
  # build waits / needs both to be completed first
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install dependencies
        run: |
          pip install flake8
          pip install pipenv
          pipenv update
          pipenv install
          pipenv --rm
          pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv update
          pipenv install
          pipenv --rm
          pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install
          pipenv update
          pipenv install
          pipenv --rm
          pipenv run test

      # There should be a step that utilizes aws-actions/amazon-ecr-login action for logging into ECR.
      # (using 3rd party actions) The ECR login step should also be accessing Github Secrets for credentials. (secure approach)

      # There should be a step that pushes the docker image to ECR in the AWS account.

      # There should be a step that deploys the application using kubectl to the kubernetes cluster
